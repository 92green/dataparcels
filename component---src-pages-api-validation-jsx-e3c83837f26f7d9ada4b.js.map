{"version":3,"sources":["webpack:///./src/mdx/api/validation.mdx","webpack:///./src/pages/api/validation.jsx","webpack:///./src/component/Param.jsx"],"names":["layoutProps","_frontmatter","MDXLayout","MDXContent","components","props","mdxType","parentName","Param","name","type","isMDXComponent","pageTop","pageBottom","mdxHeading","nav","pageNav","def","optional","mb","textStyle"],"mappings":"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","file":"component---src-pages-api-validation-jsx-e3c83837f26f7d9ada4b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Param from 'component/Param';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"validation\"\n    }}>{`validation`}</h1>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-js\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`import`}</span>{` validation `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`from`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'dataparcels/validation'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`import`}</span>{` validation `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`from`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'react-dataparcels/validation'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code></pre></div>\n    <p>{`Dataparcels' validation plugin provides an easy way to test whether data conforms to a set of validation rules. This is most useful when `}<a parentName=\"p\" {...{\n        \"href\": \"/ui-behaviour#Validation-on-user-input\"\n      }}>{`checking if user input is correct before allowing changes to be submitted`}</a>{`.`}</p>\n    <p>{`Once configured, it provides function that can be run against Parcel data, and it will set `}<a parentName=\"p\" {...{\n        \"href\": \"/parcel-meta\"\n      }}>{`Parcel meta`}</a>{` wherever data is invalid, and also block any `}<inlineCode parentName=\"p\">{`submit()`}</inlineCode>{` actions unless all data is valid.`}</p>\n    <h3 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example usage`}</h3>\n    <p>{`Please refer to the UI Behaviour page to see `}<a parentName=\"p\" {...{\n        \"href\": \"/ui-behaviour#Validation-on-user-input\"\n      }}>{`a full example`}</a>{`.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-js\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`let`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`parcel`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` parcelControl`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`useParcelForm`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`beforeChange`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`validation`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'name'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`value`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` value `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`?`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`null`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`Name must not be blank`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'animals.*.type'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`value`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` value `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`?`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`null`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`Animal type must not be blank`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'animals.*.amount'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`\n            `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`value`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` Number`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`isInteger`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`?`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`null`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`Animal type must be a whole number`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n            `}<span parentName=\"code\" {...{\n            \"className\": \"token parameter\"\n          }}>{`value`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` value `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`?`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`null`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`Animal type must be positive`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span>{`\n        `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// ^ run validator before data updates`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// parcel.get('name').meta.invalid will contain \\`Name must not be blank\\` if it is blank, or null otherwise`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// parcel.meta.valid will contain true if all validation rules pass, or false otherwise`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// parcelControl.submit() will only work if all validation rules pass`}</span></code></pre></div>\n    <h2 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h2>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"flow\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-flow\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-flow\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`validation`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`validationRuleMap`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` ValidationRuleMap`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` ParcelUpdater`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`type`}</span>{` ValidationRuleMap `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`matchPath`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token type tag\"\n          }}>{`string`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` ValidationRule`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`|`}</span>{`ValidationRule`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`type`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function-variable function\"\n          }}>{`ValidationRule`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token type tag\"\n          }}>{`any`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` keyPath`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` Array`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span><span parentName=\"code\" {...{\n            \"className\": \"token type tag\"\n          }}>{`number`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`|`}</span><span parentName=\"code\" {...{\n            \"className\": \"token type tag\"\n          }}>{`string`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` topLevelValue`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token type tag\"\n          }}>{`any`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token type tag\"\n          }}>{`any`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code></pre></div>\n    <p>{`The `}<inlineCode parentName=\"p\">{`validation`}</inlineCode>{` function requires a single argument, a validation rule map.`}</p>\n    <ul>\n      <li parentName=\"ul\"><Param name=\"validationRuleMap\" type=\"Object\" mdxType=\"Param\" />\nA validationRuleMap is an object containing strings for keys and functions, or arrays of functions as values.</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"match-paths\"\n    }}>{`Match paths`}</h3>\n    <p>{`Match paths are strings that indicate which parts of the Parcel's data shape to run the associated validation rule(s) against. Dots (`}<inlineCode parentName=\"p\">{`.`}</inlineCode>{`) indicate nested properties, and asterisks (`}<inlineCode parentName=\"p\">{`*`}</inlineCode>{`) indicate wildcards.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` matches a property called `}<inlineCode parentName=\"li\">{`name`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`animals.*`}</inlineCode>{` matches all elements of a property called `}<inlineCode parentName=\"li\">{`animals`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`animals.*.type`}</inlineCode>{` matches all properties called `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` on all elements of a property called `}<inlineCode parentName=\"li\">{`animals`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"validation-rules\"\n    }}>{`Validation rules`}</h3>\n    <p>{`Validation rules are functions that should return something if the data being validates is invalid. Usually this is a string describing why the data is invalid, which can be rendered in the form.`}</p>\n    <p>{`If the data is valid, `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` should be returned.`}</p>\n    <h4 {...{\n      \"id\": \"validation-rules-arguments\"\n    }}>{`Validation rules arguments`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <Param name=\"value\" type=\"any\" mdxType=\"Param\" />\nThe value to be validated, which will be called on each piece of data matched by the match path.\n      </li>\n      <li parentName=\"ul\">\n        <Param name=\"keyPath\" type=\"any[]\" mdxType=\"Param\" />\nThe current key path.\n      </li>\n      <li parentName=\"ul\">\n        <Param name=\"topLevelValue\" type=\"any\" mdxType=\"Param\" />\nThe top level value of the Parcel who the validator is being run against.\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`validation`}</inlineCode>{` function returns a `}<inlineCode parentName=\"p\">{`ParcelUpdater`}</inlineCode>{` function, which is most suitable to be passed into `}<a parentName=\"p\" {...{\n        \"href\": \"/api/useParcelForm#beforeUpdate\"\n      }}>{`useParcelForm.beforeUpdate`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/api/useParcelBuffer#beforeUpdate\"\n      }}>{`useParcelBuffer.beforeUpdate`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"/api/useParcelState#beforeUpdate\"\n      }}>{`useParcelState.beforeUpdate`}</a>{`.`}</p>\n    <p>{`This returned function is often used with `}<a parentName=\"p\" {...{\n        \"href\": \"/api/useParcelForm#validation\"\n      }}>{`useParcelForm`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"meta\"\n    }}>{`Meta`}</h2>\n    <p>{`This validation plugin sets the following meta:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <Param name=\"${top level}.meta.valid\" type=\"boolean\" mdxType=\"Param\" />\nA boolean on the top level parcel indicating if the entire form is valid.\n      </li>\n      <li parentName=\"ul\">\n        <Param name=\"${top level}.meta.invalidList\" type=\"Array\" mdxType=\"Param\" />\nAn array on the top level parcel containing the error outputs of all invalid fields.\n      </li>\n      <li parentName=\"ul\">\n        <Param name=\"${top level}.meta.showInvalid\" type=\"boolean\" mdxType=\"Param\" />\nA boolean that describes if invalid fields are being processed. Invalid fields are not processed until first attempted submit, then they are processed every time data changes.\n      </li>\n      <li parentName=\"ul\">\n        <Param name=\"${each field}.meta.invalid\" type=\"any\" mdxType=\"Param\" />\nOn each validated field, `meta.invalid` will contain the result of the validation rule.\n      </li>\n    </ul>\n    <p>{`An example of how this meta can be used `}<a parentName=\"p\" {...{\n        \"href\": \"/ui-behaviour#Validation-on-user-input\"\n      }}>{`can be found here`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// @flow\nimport React from 'react';\nimport Page from 'component/Page';\nimport {ContentNav} from 'dcme-style';\nimport ValidationMarkdown from 'mdx/api/validation.mdx';\nimport {apiNav} from 'nav/apiNav';\n\nexport default () => <Page>\n    <ContentNav\n        pageTop\n        pageBottom\n        mdxHeading\n        nav={apiNav}\n        pageNav={[\n            '# validation',\n            'Arguments',\n            'Match paths',\n            'Validation rules',\n            'Returns',\n            'Meta'\n        ]}\n    >\n        <ValidationMarkdown />\n    </ContentNav>\n</Page>;\n","// @flow\nimport React from 'react';\nimport {Text} from 'dcme-style/affordance';\nimport {Box} from 'dcme-style/layout';\n\ntype Props = {\n    default?: string,\n    name: string,\n    optional?: boolean,\n    type: string\n};\n\nexport default (props: Props) => {\n    let {default: def, name, optional, type} = props;\n    return <Box mb={3}>\n        <Text textStyle=\"h4\">{name}</Text> <Text textStyle=\"codeType\">{optional ? \"?\" : \"\"}: {type} {def ? `= ${def}` : \"\"}</Text>\n    </Box>;\n};\n"],"sourceRoot":""}